{"version":3,"sources":["webpack:///./app/data/actions.ts","webpack:///./app/data/constants.ts","webpack:///./app/components/GeoForm/GeoForm.module.css","webpack:///./app/components/Layers/Layers.module.css","webpack:///./app/data/reducer.ts","webpack:///./app/data/utils.ts","webpack:///./app/components/Map/Map.tsx","webpack:///./app/components/Map/RoadsLayer.tsx","webpack:///./app/data/Provider.tsx","webpack:///./app/components/Layers/LayerItem.tsx","webpack:///./app/components/Layers/Layers.tsx","webpack:///./app/components/GeoForm/GeoInput.tsx","webpack:///./app/components/GeoForm/GeoForm.tsx","webpack:///./app/App.tsx","webpack:///./app/index.js","webpack:///./app/data/context.ts"],"names":["index","COLORS","saveLayer","payload","data","id","uuid","color","length","createAction","constants","Layers","Save","removeLayer","Remove","Constants","mirror","path","divider","object","Object","keys","reduce","prev","curr","item","name","module","exports","initialState","layers","reducer","createReducer","state","action","push","filter","x","handlers","type","produce","MapView","ReactMapboxGl","accessToken","process","env","JUNO_MAPBOX_KEY","geo1Data","require","Map","children","props","useDataContext","dispatch","useEffect","actions","geoData","style","containerStyle","height","width","map","layer","key","RoadsLayer","geoJsonSource","sourceId","paint","Provider","useReducer","value","LayerItem","onRemove","handleRemove","useCallback","className","styles","row","info","backgroundColor","onClick","small","remove","GeoInput","form","useFormikContext","handleFileUpload","file","setFieldValue","reader","FileReader","onload","result","JSON","parse","err","setFieldError","readAsText","label","required","fieldClassName","field","inputClassName","input","onChangeCustom","GeoForm","onSubmit","q","values","formikActions","resetForm","noHeaderMargin","header","initialValues","hr","hot","center","ReactDOM","render","document","getElementById","context","DataContext","React","createContext","useContext"],"mappings":"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","file":"main.160bb766ce745dabc454.js","sourcesContent":["import uuid from 'uuid/v4';\n\nimport { LayerPayload, Layer } from 'types';\n\nimport { createAction } from './utils';\nimport constants from './constants';\n\nlet index = 0;\n\nconst COLORS = [\n  'rgb(12, 122, 188)',\n  'rgb(198, 6, 56)',\n  'rgb(18, 137, 248)',\n  'rgb(224, 83, 59)',\n  'rgb(14, 117, 58)',\n  'rgb(140, 158, 127)',\n  'rgb(24, 80, 165)',\n];\n\nexport const saveLayer = (payload: LayerPayload) => {\n  const data = {\n    id: uuid(),\n    color: COLORS[index],\n    ...payload,\n  };\n\n  index = (index + 1) % COLORS.length;\n\n  return createAction<Layer>(constants.Layers.Save, data);\n};\n\nexport const removeLayer = (id: string) => createAction<string>(constants.Layers.Remove, id);\n","const Actions = {\n  Layers: {\n    Save: null,\n    Remove: null,\n  },\n};\n\nconst mirror = (path: string, divider: string, object: any) => {\n  const keys = Object.keys(object);\n\n  return keys.reduce((prev: Record<string, any>, curr: string): Record<string, any> => {\n    const item = object[curr];\n    const name = `${path}${divider}${curr}`;\n\n    if (item instanceof Object) {\n      prev[curr] = mirror(name, divider, item);\n    } else {\n      prev[curr] = name;\n    }\n\n    return prev;\n  }, {});\n};\n\nconst Constants: Record<string, any> = mirror('Actions', '.', Actions);\n\nexport default Constants;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"GeoForm-module__form___1bEcp\",\"input\":\"GeoForm-module__input___1yLp7\",\"hr\":\"GeoForm-module__hr___2mOqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Layers-module__row___11TQb\",\"color\":\"Layers-module__color___1HLiN\",\"info\":\"Layers-module__info___1-fOF\"};","import { AppState } from 'types';\n\nimport constants from './constants';\nimport { createReducer } from './utils';\n\nexport const initialState: AppState = {\n  layers: [],\n};\n\nexport const reducer = createReducer({\n  [constants.Layers.Save]: (state, action) => {\n    state.layers.push(action.payload);\n  },\n  [constants.Layers.Remove]: (state, action) => {\n    state.layers = state.layers.filter((x) => x.id !== action.payload);\n  },\n});\n","import produce from 'immer';\n\nimport { Reducer, AppState } from 'types';\n\nexport const createReducer: Reducer<AppState> = (handlers) => (state, action) => {\n  if (handlers[action.type]) {\n    return produce(handlers[action.type])(state, action);\n  }\n\n  return state;\n};\n\nexport const createAction = <T>(type: string, payload: T) => ({\n  type,\n  payload,\n});\n","import React, { FC, useEffect } from 'react';\nimport ReactMapboxGl from 'react-mapbox-gl';\n\nimport * as actions from 'data/actions';\nimport { useDataContext } from 'data/context';\n\nimport RoadsLayer from './RoadsLayer';\n// import BoundingBox from './BoundingBox';\n\nconst MapView = ReactMapboxGl({\n  accessToken: process.env.JUNO_MAPBOX_KEY || '',\n});\n\ninterface MapViewProps {\n  center: [number, number];\n}\n\nconst geo1Data = require('mocks/geo4.json');\n// const geo2Data = require('mocks/geo2.json');\n\nconst Map: FC<MapViewProps> = ({ children, ...props }) => {\n  const { state, dispatch } = useDataContext();\n\n  useEffect(() => {\n    dispatch(actions.saveLayer({ name: 'Layer 1', geoData: geo1Data }));\n  }, []);\n\n  return (\n    <MapView\n      style=\"mapbox://styles/mapbox/streets-v9\"\n      containerStyle={{\n        height: '100vh',\n        width: '100vw',\n      }}\n      {...props}\n    >\n      {state.layers.map((layer) => (\n        <RoadsLayer key={layer.id} {...layer} />\n      ))}\n      {/*<BoundingBox />*/}\n    </MapView>\n  );\n};\n\nexport default Map;\n","import React, { FC } from 'react';\nimport { Source, Layer } from 'react-mapbox-gl';\n\nimport { Layer as LayerType } from 'types';\n\nconst RoadsLayer: FC<LayerType> = ({ id, geoData, color }) => (\n  <>\n    <Source\n      id={`${id}-source`}\n      geoJsonSource={{\n        type: 'geojson',\n        data: geoData,\n      }}\n    />\n    <Layer\n      id={`${id}-layer`}\n      sourceId={`${id}-source`}\n      type=\"line\"\n      paint={{\n        'line-color': color,\n        'line-width': 3,\n      }}\n    />\n  </>\n);\n\nexport default RoadsLayer;\n","import React, { useReducer, FC } from 'react';\n\nimport { DataContext } from './context';\nimport { reducer, initialState } from './reducer';\n\nconst Provider: FC<{}> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return <DataContext.Provider value={{ dispatch, state }}>{children}</DataContext.Provider>;\n};\n\nexport default Provider;\n","import React, { FC, useCallback } from 'react';\nimport { Button } from '@juno/ui-private/components';\n\nimport { Layer } from 'types';\n\nimport styles from './Layers.module.css';\n\ninterface LayerProps extends Layer {\n  onRemove: (id: string) => void;\n}\n\nconst LayerItem: FC<LayerProps> = ({ id, name, color, onRemove }) => {\n  const handleRemove = useCallback(() => onRemove(id), [onRemove]);\n\n  return (\n    <div className={styles.row}>\n      <div className={styles.info}>\n        <div className={styles.color} style={{ backgroundColor: color }} />\n        <div className={styles.name}>{name}</div>\n      </div>\n\n      <Button onClick={handleRemove} small className={styles.remove}>\n        Remove\n      </Button>\n    </div>\n  );\n};\n\nexport default LayerItem;\n","import React, { FC, useCallback } from 'react';\n\nimport { useDataContext } from 'data/context';\nimport * as actions from 'data/actions';\n\nimport LayerItem from './LayerItem';\n\nconst Layers: FC<{}> = () => {\n  const { state, dispatch } = useDataContext();\n\n  const handleRemove = useCallback(\n    (id) => {\n      dispatch(actions.removeLayer(id));\n    },\n    [dispatch]\n  );\n\n  return (\n    <div>\n      {state.layers.map((layer) => (\n        <LayerItem key={layer.id} onRemove={handleRemove} {...layer} />\n      ))}\n    </div>\n  );\n};\n\nexport default Layers;\n","import React, { useCallback, FC } from 'react';\nimport { File } from '@juno/ui-private/components/formik';\nimport { useFormikContext } from 'formik';\n\nimport style from './GeoForm.module.css';\n\nconst GeoInput: FC = () => {\n  const form = useFormikContext();\n\n  const handleFileUpload = useCallback((path, file: Blob) => {\n    form.setFieldValue('file', path);\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (typeof reader.result === 'string') {\n        try {\n          form.setFieldValue('geoData', JSON.parse(reader.result));\n        } catch (err) {\n          form.setFieldError('file', 'invalid file format');\n        }\n      } else {\n        form.setFieldError('file', 'invalid file format');\n      }\n    };\n\n    if (file) {\n      reader.readAsText(file);\n    }\n  }, []);\n\n  return (\n    <File\n      label=\"Layer src\"\n      name=\"file\"\n      required\n      fieldClassName={style.field}\n      inputClassName={style.input}\n      onChangeCustom={handleFileUpload}\n    />\n  );\n};\n\nexport default GeoInput;\n","import React, { useCallback, FC } from 'react';\nimport { Form, Input } from '@juno/ui-private/components/formik';\n// @ts-ignore\nimport { CollapsibleCard, Button } from '@juno/ui-private/components';\n\nimport { useDataContext } from 'data/context';\nimport { saveLayer } from 'data/actions';\nimport Layers from 'components/Layers';\n\nimport GeoInput from './GeoInput';\nimport style from './GeoForm.module.css';\n\nconst GeoForm: FC = () => {\n  const { dispatch } = useDataContext();\n\n  const onSubmit = useCallback(\n    ({ values, formikActions }, q) => {\n      dispatch(saveLayer(values));\n      formikActions.resetForm();\n    },\n    [dispatch]\n  );\n\n  return (\n    <CollapsibleCard noHeaderMargin header=\"Layers\" className={style.form}>\n      <Form onSubmit={onSubmit} initialValues={{}}>\n        <Input name=\"name\" label=\"Layer name\" required />\n        <GeoInput />\n        <Button type=\"submit\" small>\n          Add\n        </Button>\n      </Form>\n      <hr className={style.hr} />\n      <Layers />\n    </CollapsibleCard>\n  );\n};\n\nexport default GeoForm;\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\n\nimport Provider from 'data/Provider';\nimport Map from './components/Map';\nimport GeoForm from './components/GeoForm';\n\nconst App = () => (\n  <Provider>\n    <Map center={[-104.991531, 39.742043]} />\n    <GeoForm />\n  </Provider>\n);\n\nexport default hot(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport '@juno/ui-private/styles/variables.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { Dispatch, useContext } from 'react';\n\nimport { AppState } from 'types';\n\nimport { initialState } from './reducer';\n\nexport interface Context {\n  state: AppState;\n  dispatch: Dispatch<any>;\n}\n\nconst context: Context = {\n  state: initialState,\n  dispatch: () => {},\n};\n\nexport const DataContext = React.createContext(context);\n\nexport const useDataContext = (): Context => {\n  return useContext<Context>(DataContext);\n};\n"],"sourceRoot":""}